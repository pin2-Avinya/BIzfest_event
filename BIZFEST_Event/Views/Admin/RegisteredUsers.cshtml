@model List<UserEvent>

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <!-- Form to select an event -->
            <div class="card mb-1">
                <div class="card-body">
                    <form id="searchForm">
                        <div class="row">
                            <label class="col-sm-3 col-form-label">Event Name</label>
                            <div class="col-10">
                                <div class="input-group gap-1">
                                    <select id="eventSelect" name="EventId" class="form-control">
                                        <option value="">-- select event --</option>
                                        @foreach (var type in Model)
                                        {
                                            <option value="@type.Id">@type.EventName</option>   
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-2">
                                <div class="input-group gap-1">
                                    <button type="button" id="searchButton" class="btn btn-primary px-4 py-2">Search</button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Table to display event data -->
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Event List</h4>
                    <div class="table-responsive">
                        <table id="eventTable" class="table table-bordered table-hover">
                            <thead>
                                <tr id="tableHeader">
                                    <!-- Headers will be populated dynamically -->
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Rows will be populated dynamically -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var table;

            $('#searchButton').click(function () {
                var eventId = $('#eventSelect').val();
                if (eventId) {
                    fetchData(eventId);
                } else {
                    alert('Please select an event.');
                }
            });

            function fetchData(eventId) {
                $.ajax({
                    url: `/Admin/GetRegisteredUsers?EventId=${eventId}`,
                    type: 'GET',
                    success: function (responseData) {
                        if (responseData && responseData.length > 0) {
                            const headers = [...new Set(responseData.flatMap(item => item.entries.map(entry => entry.labelName)))];

                            const groupedData = groupDataByEventId(responseData);

                            var thead = $('#tableHeader').empty();
                            headers.forEach(header => {
                                thead.append(`<th scope="col">${header}</th>`);
                            });

                            if (table) {
                                table.clear().destroy();
                            }

                            initializeDataTable(groupedData, headers);
                        } else {
                            alert('No data found for the selected event.');
                        }
                    },
                    error: function () {
                        console.log("Failed to fetch data.");
                    }
                });
            }

            function groupDataByEventId(data) {
                const rows = [];

                data.forEach(item => {
                    const row = {};
                    item.entries.forEach(entry => {
                        row[entry.labelName] = entry.value || 'N/A'; 
                    });
                    rows.push(row);
                });

                return rows;
            }

            function initializeDataTable(data, headers) {
                table = $('#eventTable').DataTable({
                    data: data,
                    columns: headers.map(header => ({
                        data: header,
                        title: header,
                        defaultContent: 'N/A', 
                        autoWidth: true
                    })),
                    destroy: true,
                    responsive: true
                });
            }
        });


    </script>
}
